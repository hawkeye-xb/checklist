
name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - main
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Create Keystore Properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "storeFile=../upload-keystore.jks" >> key.properties
          ls -laq
          cat key.properties
        working-directory: android

      - name: Decode Keystore
        run: echo ${{ secrets.KEY_STORE_BASE64 }} | base64 --decode > android/upload-keystore.jks
      
      - name: Ls Android Directory
        run: ls -laq
        working-directory: android
      
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.19.0'
          
      - name: Get dependencies
        run: flutter pub get
   
      - name: Build APK
        run: flutter build apk --split-per-abi

      - name: Ls output directory
        run: ls -laq build/app/outputs/flutter-apk/
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Release description here
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}
      # - name: Create timestamped tag
      #   id: create_tag
      #   run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"
      #   shell: bash
      
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}
      #   with:
      #     tag_name: release-${{ steps.create_tag.outputs.timestamp }}
      #     release_name: Release ${{ steps.create_tag.outputs.timestamp }}
      #     draft: false
      #     prerelease: false
      #     body: "Create by pipeline... todo: Description of the release"
      #     commitish: ${{ github.sha }}
  
      # - name: Upload Release Assets
      #   run: |
      #     for file in build/app/outputs/flutter-apk/*; do
      #       if [ -f "$file" ]; then
      #         echo "Uploading $file"
      #         curl -v -X POST \
      #           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #           -H "Content-Type: application/octet-stream" \
      #           --data-binary @"$file" \
      #           "${{ steps.create_release.outputs.upload_url }}?name=$(basename "$file")"
      #       else
      #         echo "File not found: $file"
      #       fi
      #     done
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}